import type { ESTree } from "meriyah";
import type { ProbeContext } from "../ProbeRunner.js";
import { type SourceArrayLocation } from "../utils/toArrayLocation.js";
type DataExfiltrationContextDef = Record<string, SourceArrayLocation[]>;
declare function validateNode(node: ESTree.Node, ctx: ProbeContext): [boolean, any?];
declare function main(node: ESTree.CallExpression, ctx: ProbeContext<DataExfiltrationContextDef>): void;
declare function initialize(ctx: ProbeContext<DataExfiltrationContextDef>): void;
declare function finalize(ctx: ProbeContext<DataExfiltrationContextDef>): void;
declare const dateExifiltration: {
    name: string;
    validateNode: typeof validateNode;
    initialize: typeof initialize;
    finalize: typeof finalize;
    main: typeof main;
    breakOnMatch: boolean;
    context: {};
};
export default dateExifiltration;
//# sourceMappingURL=data-exfiltration.d.ts.map