import type { ESTree } from "meriyah";
import { WalkerBase, type WalkerContext } from "./walker.base.js";
export type SyncHandler = (this: WalkerContext, node: ESTree.Node, context: SyncWalkerVisitorContext) => void;
export interface SyncWalkerVisitorContext {
    parent: ESTree.Node | null;
    prop?: string | number;
    index?: number | null;
}
export declare class SyncWalker extends WalkerBase {
    enter: SyncHandler | undefined;
    leave: SyncHandler | undefined;
    constructor(enter?: SyncHandler, leave?: SyncHandler);
    visit(node: ESTree.Node, options: SyncWalkerVisitorContext): ESTree.Node | null;
}
//# sourceMappingURL=walker.sync.d.ts.map